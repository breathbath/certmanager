apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-deployment
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Chart.Name }}
    release: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app:  {{ .Chart.Name }}
        release: {{ .Release.Name }}
      annotations:
        commit-hash: "rev/{{ .Values.rev_id }}"
    spec:
      serviceAccountName: {{ .Values.serviceAccount.name }}
      volumes:
        - name: acme-challenge-data
          emptyDir: {}
      containers:
        - name: certmanager
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            runAsNonRoot: true
            runAsUser: 1002
            allowPrivilegeEscalation: false
            seccompProfile:
              type: "RuntimeDefault"
            capabilities:
              drop:
                - ALL
          env:
            - name: CERTMANAGER_SECRET_NAME
              value: "{{ .Values.certManager.secretName }}"
            - name: CERTMANAGER_TARGET_NAMESPACES
              value: "{{ .Values.certManager.targetNamespaces }}"
            - name: CERTMANAGER_RUN_INTERVAL
              value: "{{ .Values.certManager.runInterval }}"
            - name: CERTMANAGER_CHALLENGE_PATH
              value: {{ .Values.sharedPath }}
            - name: CERTMANAGER_CERT_EMAIL
              value: {{ .Values.certManager.cert.email }}
            - name: CERTMANAGER_CERT_DOMAIN
              value: {{ .Values.certManager.cert.domain }}
            - name: CERTMANAGER_ISSUE_TIMEOUT
              value: {{ .Values.certManager.issTimeout }}
          resources:
            {{- toYaml .Values.certManager.resources | nindent 12 }}
          volumeMounts:
            - name: acme-challenge-data
              mountPath: {{ .Values.sharedPath }}
          command:
            - /app/certmanager
            - certmanager
        - name: challenge
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.challenge.port }}
              protocol: TCP
          securityContext:
            runAsNonRoot: true
            runAsUser: 1002
            allowPrivilegeEscalation: false
            seccompProfile:
              type: "RuntimeDefault"
            capabilities:
              drop:
                - ALL
          env:
            - name: CHALLENGE_PORT
              value: "{{ .Values.challenge.port }}"
            - name: CHALLENGE_PATH
              value: "{{ .Values.sharedPath }}"
          volumeMounts:
            - name: acme-challenge-data
              mountPath: {{ .Values.sharedPath }}
          resources:
            {{- toYaml .Values.challenge.resources | nindent 12 }}
          command:
            - /app/certmanager
            - challenge

