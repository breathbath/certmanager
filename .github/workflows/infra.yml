name: Builds docker and installs all infra
on:
  workflow_call:
    inputs:
      env:
        required: true
        type: string
      config-path:
        required: true
        type: string
env:
  KUBECONFIG: "config.kubeconfig"
jobs:
  validate-config:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
      - name: Validate JSON config
        run: jq empty ${{ inputs.config-path }}
  docker:
    needs:
      - validate-config
    name: Build and Push Docker Images
    runs-on: self-hosted
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    outputs:
      docker_tag: ${{ steps.meta.outputs.version }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username:  ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=sha

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/arm64
  install:
    name: install app
    runs-on: self-hosted
    needs: [ docker ]
    environment:
      name: ${{ inputs.env }}
    env:
      DOCKER_PULL_SECRET: ${{ secrets.DOCKER_PULL_SECRET }}
      DOCKER_REPOSITORY: ghcr.io/${{ github.repository }}
      DOCKER_TAG: ${{ needs.docker.outputs.docker_tag }}
      REV_ID: ${{ github.sha }}
      ENVIRONMENT: ${{ inputs.env }}
      CONFIG_PATH: ${{ inputs.config-path }}
    steps:
      - name: Check if DOCKER_TAG is set
        run: |
          if [ -z "${DOCKER_TAG}" ]; then
            echo "Error: DOCKER_TAG is not set"
            exit 1
          fi
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: 'Install helm'
        uses: 'azure/setup-helm@v4.3.0'
      - name: Kubectl configuration
        run: |
          echo ${{ secrets.KUBECONFIG }} | base64 --decode > "${KUBECONFIG}"
          chmod 600 "${KUBECONFIG}"
      - name: 'Prepare'
        run: 'chmod +x ./infra/scripts/install.sh'
      - name: 'Install certmanager'
        run: './infra/scripts/install.sh certmanager'
      - name: cleanup
        if: always()
        run: |
          rm -f "${KUBECONFIG}"

