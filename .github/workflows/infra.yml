name: Builds docker and installs all infra
on:
  workflow_dispatch:
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  KUBECONFIG: "config.kubeconfig"
jobs:
  validate-config:
    uses: ./.github/workflows/config.yml
  docker-arm64: #for GitHub public repositories only see https://docs.github.com/en/actions/using-github-hosted-runners/using-github-hosted-runners/about-github-hosted-runners
    needs:
      - validate-config
    uses: ./.github/workflows/docker.yml
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    with:
      arch: arm64
      registry: ${{ env.REGISTRY }}
      file: Dockerfile
      runner: ubuntu-22.04-arm
      image: ${{ env.IMAGE_NAME }}
    secrets:
      username: ${{ github.actor }}
      password: ${{ secrets.GITHUB_TOKEN }}
  docker-amd64:
    needs:
     - validate-config
    uses: ./.github/workflows/docker.yml
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    with:
      arch: amd64
      registry: ${{ env.REGISTRY }}
      file: Dockerfile
      runner: ubuntu-latest
      image: ${{ env.IMAGE_NAME }}
    secrets:
      username: ${{ github.actor }}
      password: ${{ secrets.GITHUB_TOKEN }}
  install:
    name: install app
    runs-on: ubuntu-latest
    needs: [ docker-amd64, docker-arm64 ]
    env:
      DOCKER_PULL_SECRET: ${{ secrets.DOCKER_PULL_SECRET }}
      DOCKER_REPOSITORY: ghcr.io/${{ github.repository }}
      DOCKER_TAG: ${{ needs.docker-amd64.outputs.docker_tag }}
      REV_ID: ${{ github.sha }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: 'Install helm'
        uses: 'azure/setup-helm@v4.3.0'
      - name: Kubectl configuration
        run: |
          echo ${{ secrets.KUBECONFIG_PROD }} | base64 --decode > "${KUBECONFIG}"
          chmod 600 "${KUBECONFIG}"
      - name: 'Prepare'
        run: 'chmod +x ./infra/scripts/install.sh'
      - name: 'Install certmanager'
        run: './infra/scripts/install.sh certmanager'
      - name: cleanup
        if: always()
        run: |
          rm -f "${KUBECONFIG}"

